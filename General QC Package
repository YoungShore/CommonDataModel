/* ================================================================================ */
/*								QC ALL TABLES & VARS								*/
/* ================================================================================ */


proc format;
	value $mis_c
		' ' = 'Miss'
	other	= 'NonMiss'
	;

	value mis_n
		.	= 'Miss'
	other	= 'NonMiss'
	;
run;

%macro uidobs_indxd(lib,dstin,dstout,seq,uid);
proc contents data = &lib..&dstin.&seq. details noprint
			  out  = &wrk..&dstout.ctnt_&seq.(keep=libname memname name varnum type format label nobs) ; run;
proc contents data = &lib..&dstin. details noprint
			  out2 = &wrk..&dstout.ctnt2_&seq.(keep=libname member name type numvals) ; run;

proc sql;
create table &dstout.uidobs_&seq. as
select distinct a.numVals 	as Unique_IDs,
				b.nobs		as Observations
from &wrk..&dstout.ctnt2_&seq. as a
left join &wrk..&dstout.ctnt_&seq. as b
on a.name = b.name
where a.name=upcase("&UID");
quit;
%mend;
*%uidobs_indxd(s_mks,demographic0616,demo0616,PATID);

%macro uidobs_non_indxd(lib,dstin,dstout,seq,uid);

	proc sql;
	create table &dstout.uidobs_&seq. as
	select distinct count(distinct &uid.) as Unique_IDs, count(&uid.) as Observations
	from &lib..&dstin.&seq.;
	quit;

%mend;
*%uidobs_non_indxd(arbda,_01_demo,demo,,accNum);

%macro combo_seqs(dstout,qcItem,seq);
data &wrk..all&dstout._&qcItem.&seq. ;
set &wrk..&dstout.&qcItem._: ;
run;
%mend;
*%combo_seqs(demo,uidobs,);

%macro allmeans(lib,dstin,dstout,seq);

	proc contents data = &lib..&dstin.&seq. details noprint
			  	  out  = &wrk..&dstout.ctnt_&seq.(keep=libname memname name varnum type format label nobs) ; run;

	proc sql noprint ;			*<-------------- NUM_VAR_LIST ---------------;

	select distinct name into:  NUM_VAR_LIST separated by ' ' from &wrk..&dstout.ctnt_&seq.
		where type = 1 ; 

	quit;

	%let j=0 ;	
	%do %while (%qscan(&num_var_list.,%eval(&j+1)) ne ) ;

		%let j 			= %eval(&j+1) ;
		%let numVar		= %scan(&num_var_list.,&j.) ;
		%let numVarSrt	= %substr(&numVar,1,12) ;

		proc means data = &lib..&dstin.&seq.  maxdec=2 noprint ;
			var &numVar. ;
			output out = &wrk..&dstout.mean&seq._&numVarSrt.(drop=_:) 
						n=N nmiss=NMISS mean=MEAN std=STD min=MIN p1=P1 p5=P5 p10=P10 q1=Q1 median=MEDIAN q3=Q3 p90=P90 p95=P95 p99=P99 max=MAX ;
		run;

		data &wrk..&dstout.meand&seq._&numVarSrt.
			 &wrk..&dstout.meant&seq._&numVarSrt.
			 &wrk..&dstout.meann&seq._&numVarSrt.
			;
			length VARNAME $25 ;
		set &wrk..&dstout.mean&seq._&numVarSrt. ;

			VARNAME = "&numVar." ;

				 if find(varname,'date','i') or upcase(varName) in ('DOB') then output &wrk..&dstout.meand&seq._&numVarSrt. ;
			else if find(varname,'time','i') then output &wrk..&dstout.meant&seq._&numVarSrt. ;
			else 								  output &wrk..&dstout.meann&seq._&numVarSrt. ;

		run;

	%end;

	data &wrk..all&dstout._meands&seq.(drop=mean_ std_) ;
	set &wrk..&dstout.meand&seq._:(rename=(n=N_ nmiss=NMISS_ mean=MEAN_ std=STD_ min=MIN_ p1=P1_ p5=P5_ p10=P10_ q1=Q1_ median=MEDIAN_ q3=Q3_ p90=P90_ p95=P95_ p99=P99_ max=MAX_)) ;
	format mean_ -- max_ mmddyy10. ;
	run;

	data &wrk..all&dstout._meants&seq.(drop=mean_ std_) ;
	set &wrk..&dstout.meant&seq._:(rename=(n=N_ nmiss=NMISS_ mean=MEAN_ std=STD_ min=MIN_ p1=P1_ p5=P5_ p10=P10_ q1=Q1_ median=MEDIAN_ q3=Q3_ p90=P90_ p95=P95_ p99=P99_ max=MAX_)) ;
	format mean_ -- max_ time5. ;
	run;

	data &wrk..all&dstout._meanns&seq. ;
	set &wrk..&dstout.meann&seq._: (rename=(n=N_ nmiss=NMISS_ mean=MEAN_ std=STD_ min=MIN_ p1=P1_ p5=P5_ p10=P10_ q1=Q1_ median=MEDIAN_ q3=Q3_ p90=P90_ p95=P95_ p99=P99_ max=MAX_)) ;
	format mean_ -- max_ best12. ;
	run;

%mend;
*%allmeans(arbda,_01_demo,demo,);

%macro allfreqs(lib,dstin,dstout,seq);

	proc contents data = &lib..&dstin.&seq. details noprint
			  	  out  = &wrk..&dstout.ctnt_&seq.(keep=libname memname name varnum type format label nobs) ; run;

	proc sql noprint ;			*<------------ CHAR_VAR_LIST --------------;
		select distinct name into: CHAR_VAR_LIST separated by ' ' from &wrk..&dstout.ctnt_&seq.
			where type = 2  ;
	quit;

	ods output nlevels = &wrk..&dstout.charlevels_&seq. ;
	proc freq data = &lib..&dstin.&seq. nlevels ;
		tables _all_ / missing noprint ;
	run;


	proc sql;
	create table &wrk..&dstout.clvlgt20_&seq. as
		select distinct a.name
			from &wrk..&dstout.ctnt_&seq. as a
			left join &wrk..&dstout.charlevels_&seq. as b
				on strip(a.name) = strip(b.tableVar)
				where a.type=2 and b.nLevels>20 ;
	quit;

	proc sql noprint ;
		select distinct name into: GT20_LvLs_Vars separated by ' ' from &wrk..&dstout.clvlgt20_&seq.;
		select distinct quote(name) into: GT20_LvLs_Vars_Q separated by ',' from &wrk..&dstout.clvlgt20_&seq.;

	quit;

	%let i=0 ;
	%do %while (%qscan(&char_var_list.,%eval(&i+1)) ne ) ;

		%let i 			= %eval(&i+1) ;
		%let charVar	= %scan(&char_var_list.,&i.) ;
		%let charVarSrt	= %substr(&charVar,1,15) ;

		proc freq data = &LIB..&DSTIN.&seq.  order=freq noprint;
			table &charVar.	/ missing out = &wrk..&dstout.freq&seq._&charVarSrt. ;
			format &GT20_LvLs_Vars.  $mis_c. ;
		run;

		data &wrk..&dstout.freq&seq._&charVarSrt. ;
			length VARNAME $25 Contents $25 Description $100 ;
		set &wrk..&dstout.freq&seq._&charVarSrt.(rename=(&charVar.=Contents)) ;

		VARNAME = "&charVar." ;

		if "&charVar." in (&GT20_LvLs_Vars_Q.) then Description = strip(put(contents,$mis_c.));
		else Description = strip(Contents) ;
		
		run;

	%end;

	data &wrk..all&dstout._freqs&seq. ; 
		length VARNAME $25 Contents $25 Description $100 ;
	set &wrk..&dstout.freq&seq._: ;

	run;

%mend;
*%allfreqs(arbda,_01_demo,demo,);


%macro proc_report(dstin,dstout,seq) ;

proc report data = &wrk..all&dstout._uidobs&seq. ;
columns unique_ids observations ;
define unique_ids 			/ display 	'Unique IDs' width=15 	format=comma15. ;
define observations 			/ display 	'Observations'	width=20 	format=comma15. ;
title "====== QC &dstin.&seq. Data ======" ;
title2 "Unique_IDs & Observations Counts" ;
run;

proc report data = &wrk..all&dstout._meanns&seq. ;
columns varname n_ nmiss_ mean_ std_ min_ p1_ p5_ p10_ q1_ median_ q3_ p90_ p95_ p99_ max_ ;
define varname	/ group		'Variable Name' 		width=32 ;
define n_		/ display	'Observations'			width=20	format=comma15. ;
define nmiss_	/ display	'Missing Observations'	width=20	format=comma15. ;
define mean_	/ display	'Observation Mean'		width=10 ;
define std_		/ display	'Standard Deviation'	width=10 ;
define min_		/ display 	'Minimum Value'			width=10 ;
define p1_		/ display	'1st Percent'			width=10 ;
define p5_		/ display 	'5th Percent'			width=10 ;
define p10_		/ display 	'10th Percent'			width=10 ;
define q1_		/ display	'25th Percent'			width=10 ;
define median_	/ display 	'Observation Median'	width=10 ;
define q3_		/ display	'75th Percent'			width=10 ;
define p90_		/ display 	'90th Percent'			width=10 ;
define p95_		/ display	'95th Percent'			width=10 ;
define p99_		/ display	'99th Percent'			width=10 ;
define max_		/ display	'Maximum Value'			width=10 ;
title2 "Numeric Variables Distribution" ;
run;

proc report data = &wrk..all&dstout._freqs&seq. ;
columns varname description count percent ;
define varname 	/ group 	'Variable Name'		width=32 ;
*define contents	/ display 	'Variable Values'	width=25 ;
define description	/ display 	'Description'	width=100 ;
define count	/ display 	'Frequency'			width=20	format=comma15. ;
define percent	/ display 	'Percent'			width=10	format=6.2 ;
title2 "Character Variables Frequencies" ;
title3 "Categories Greater Than 20 Used MISS/NONMISS Format To Reduce Table Length";
run;title3;


proc report data = &wrk..all&dstout._meands&seq. ;
columns varname n_ nmiss_ /*mean_ std_*/ min_ p1_ p5_ p10_ q1_ median_ q3_ p90_ p95_ p99_ max_ ;
define varname	/ group		'Variable Name' 		width=32 ;
define n_		/ display	'Observations'			width=20	format=comma15. ;
define nmiss_	/ display	'Missing Observations'	width=20	format=comma15. ;
*define mean	/ display	'Observation Mean'		width=10 ;
*define std		/ display	'Standard Deviation'	width=10 ;
define min_		/ display 	'Minimum Value'			width=10 ;
define p1_		/ display	'1st Percent'			width=10 ;
define p5_		/ display 	'5th Percent'			width=10 ;
define p10_		/ display 	'10th Percent'			width=10 ;
define q1_		/ display	'25th Percent'			width=10 ;
define median_	/ display 	'Observation Median'	width=10 ;
define q3_		/ display	'75th Percent'			width=10 ;
define p90_		/ display 	'90th Percent'			width=10 ;
define p95_		/ display	'95th Percent'			width=10 ;
define p99_		/ display	'99th Percent'			width=10 ;
define max_		/ display	'Maximum Value'			width=10 ;
title2 "Dates Variables Distribution" ;
run;

proc report data = &wrk..all&dstout._meants&seq. ;
columns varname n_ nmiss_ /*mean_ std_*/ min_ p1_ p5_ p10_ q1_ median_ q3_ p90_ p95_ p99_ max_ ;
define varname	/ group		'Variable Name' 		width=32 ;
define n_		/ display	'Observations'			width=20	format=comma15. ;
define nmiss_	/ display	'Missing Observations'	width=20	format=comma15. ;
*define mean	/ display	'Observation Mean'		width=10 ;
*define std		/ display	'Standard Deviation'	width=10 ;
define min_		/ display 	'Minimum Value'			width=10 ;
define p1_		/ display	'1st Percent'			width=10 ;
define p5_		/ display 	'5th Percent'			width=10 ;
define p10_		/ display 	'10th Percent'			width=10 ;
define q1_		/ display	'25th Percent'			width=10 ;
define median_	/ display 	'Observation Median'	width=10 ;
define q3_		/ display	'75th Percent'			width=10 ;
define p90_		/ display 	'90th Percent'			width=10 ;
define p95_		/ display	'95th Percent'			width=10 ;
define p99_		/ display	'99th Percent'			width=10 ;
define max_		/ display	'Maximum Value'			width=10 ;
title2 "Times Variables Distribution" ;
run;

title;title2;footnote;

%mend;


%macro output_reports(rawstd,dstin,dstout,seq);

options orientation=landscape ;

ods rtf file="&outpath.\&outfolder.\QC&rawstd._&dstin.&seq..rtf"
		bodytitle startpage=no keepn notoc_data ;

%proc_report(&dstin,&dstout,&seq);

ods rtf close;

%mend;
*%output_reports(RAW,_01_DEMO,DEMO,);

* ==================== _01_DEMO ==================== ;

proc datasets lib=&wrk. nolist ;
	delete DEMO: ;
quit;run;

%uidobs_non_indxd(arbda,_01_demo,demo,,accNum);
%combo_seqs(demo,uidobs,);
%allmeans(arbda,_01_demo,demo,);
%allfreqs(arbda,_01_demo,demo,);
%output_reports(RAW,_01_DEMO,DEMO,);



* ==================== _02_LABS ==================== ;

proc datasets lib=&wrk. nolist ;
	delete LABS: ;
quit;run;

%uidobs_non_indxd(arbda,_02_labs,LABS,,accNum);
%combo_seqs(LABS,UIDOBS,);
%allMeans(arbda,_02_labs,LABS,);
%allFreqs(arbda,_02_labs,LABS,);
%output_reports(RAW,_02_LABS,LABS,);

* ==================== _03_RX ==================== ;

%macro RUN_ALL_QC(LIB,DSTIN,DSTOUT,SEQ,UID,RAWSTD);

proc datasets lib=&wrk. nolist ;
	delete &dstout.: ;
quit;run;

%uidobs_non_indxd(&LIB.,&DSTIN.,&DSTOUT.,&SEQ.,&UID.);
%combo_seqs(&DSTOUT.,UIDOBS,);

%allMeans(&LIB.,&DSTIN.,&DSTOUT.,&SEQ.);

%allFreqs(&LIB.,&DSTIN.,&DSTOUT.,&SEQ.);

%output_reports(&RAWSTD,&DSTIN.,&DSTOUT.,);

%mend;
%RUN_ALL_QC(ARBDA,_03_RX,RX, ,ACCNUM,RAW)
