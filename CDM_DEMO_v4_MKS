/* =========================================================== *
/* Programmed by Shuo Yang from Univ. of Alabama at Birmingham *
/* Last Updated on 5/18/2018 by Shuo Yang ;						*/

/* DEMOGRAPHIC STANDARDIZATION:
	- DATA SOURCE: MKS 
*/

/* ================================================================ */
/*						Define SAS Libraries						*/

%inc "M:\studies\MKS1\formats\libname.txt";
%inc "M:\studies\MKS1\pgms\Shuo\libname_sy.txt";
%inc "M:\studies\MKS1\pgms\Shuo\STD\STD_Formats_MKS_180112.sas";

%let raw = ;
%let vew = dt64 ;
%let wrk = ysms1 ;
%let std = s_mks;

%let outpath = M:\studies\MKS1\pgms\Shuo\results ;
%let verDate = %sysfunc(today(),yymmdd6.) ;
%let outfolder = &verDate.-MKS STD DEMO ;

%macro mkdir(outpath,outfolder);
	* CREATE WORK DIRECTORY FOR OUTPUT IF IT DOES NOT EXIST;
	%if %sysfunc(fileexist(&outpath.\&outfolder.)) ^= 1 %then %do;
		options dlcreatedir;
		libname output "&outpath.\&outfolder.";
	%end;
	%else %put &outpath.\&outfolder. already exists ;
%mend mkdir;
%mkdir(&outpath.,&outfolder.);

/* ==================================================================================== */
/*						Define PCORNET Variables & Necessary Others						*/

%let _patID					= PUT(ENROLID,20.) ;
%let _birthDate				= _NA_ ;
%let _birthTime				= _NA_ ;
%let _sex					= SEX ;
%let _sexualOrientation		= _NA_ ;
%let _genderIdentity		= _NA_ ;
%let _hispanic				= _NA_ ;
%let _race					= STDRACE ; *<--this is for medicaid data, ccae & mdcr data don't have race ;
%let _bioBankFlag			= _NA_ ;

%let _demoDat				= DTSTART ;
%let _age					= AGE ;
%let _dobYr					= DOBYR ;
%let _patPrefLanguageSpoken	= _NA_ ;

/* due to _na_ definition, this marco won't work as expected
%macro isBlank(param);
	%sysevalf(%superq(param)=,boolean);
%mend isBlank;
*/
%macro dob_pul(raw,dstin,dstout,kepvars);							/* ======================== DOB Part(Has Exact DOB) ======================= */

data &vew..dob_&dstout. / view = &vew..dob_&dstout. ;

	length 	PATID 		$20
			BIRTH_DATE 	4
			BIRTH_TIME	8
			;
	label 	PATID		= "Unique Patient Identification Number"
			Birth_Date	= "Patient Date of Birth"
			;
set &raw..&dstin. (keep = &kepvars. /*&_birthDate &_birthTime*/
				   where=(strip(&_patID.) not in ('','.')) ) ;

	PATID =compress(&_patID.,'. ') ;

	birth_date = &_birthDate. ;

	birth_time = &_birthTime. ;				/* <-- need to adjust according to whether have a birth_time variable */

format birth_date mmddyy10. birth_time time8.;

keep patid birth_date birth_time ;

run;
%mend;

%macro dobyr_pul(raw,dstin,dstout,kepvars);							/* ======================== DOB Part(Has Only AGE/DOBYR) ======================= */
																	/* <-- use kepvars to avoid in some data(like medicaid) doesn't have particular var(like age) */
data &vew..dob_&dstout. / view = &vew..dob_&dstout. ;

	length 	PATID 		$20
			BIRTH_DATE 	4
			BIRTH_TIME	8
			;
	label 	PATID		= "Unique Patient Identification Number"
			Birth_Date	= "Patient Date of Birth"
			;
set &raw..&dstin. (keep = &kepvars.
				   where=(strip(&_patID.) not in ('','.')) ) ;

	PATID = compress(&_patID.,'. ') ;

	birth_time = &_birthTime. ;

	if upcase(substr("&dstout.",1,4)) in ('CCAE','MDCR') then do;

		if &_age. ^= . and &_demoDat. ^= . then birth_date = intnx('month',&_demoDat.,-((&_age.+1)*12-1),'same') ;

	end;

	else if upcase(substr("&dstout.",1,4)) in ('MDCD') then do;

		birth_date = mdy(07,15,&_dobyr.);

	end;

format birth_date mmddyy10. birth_time time8.;

keep patid birth_date birth_time &_dobyr. ;

run;
%mend;

%macro run_dob_pul(raw,dstin,dstout,kepvars);

%if %str(&_birthDate.)="_NA_" %then %do;
	%dob_pul(&raw.,&dstin.,&dstout.,&kepvars.);
%end;
%else %do;
	%dobyr_pul(&raw.,&dstin.,&dstout.,&kepvars.);*<--since only dobyr exist;
%end;

proc sql;
create table &wrk..nodup_dob_&dstout.(compress=binary) as
select distinct *
from &vew..dob_&dstout. 
group by patid
having birth_date = max(birth_date); 
quit;
%mend;

%MACRO RUN_DOB_PUL;
proc printto log="&outpath.\&outfolder.\log_std_dob_yearly_pul_&verDate..log"  print="&outpath.\&outfolder.\log_std_dob_yearly_pul_&verDate..lst" new ; run;* direct log to a local file;

/* --- 2016 --- */
%run_dob_pul(m16,mdcrt161,MDCRT16,ENROLID AGE DTSTART DOBYR);*got 2098522 from 23109736, cost 1:11;
%run_dob_pul(m16,ccaet161,CCAET16,ENROLID AGE DTSTART DOBYR);*got 27895445 from 287996473, cost 14:46;
%run_dob_pul(m16,medicaid_t_2016_v1,MDCDT16,ENROLID /*AGE*/ DTSTART DOBYR);

/* --- 2015 --- */
%run_dob_pul(mscn2015,mdcrt151,MDCRT15,ENROLID AGE DTSTART DOBYR);*got  from , cost ;
%run_dob_pul(mscn2015,ccaet151,CCAET15,ENROLID AGE DTSTART DOBYR);*got  from , cost ;
%run_dob_pul(m16,medicaid_t_2015_v2,MDCDT15,ENROLID /*AGE*/ DTSTART DOBYR);

/* --- 2014 --- */
%run_dob_pul(mscn14,mdcrt141,MDCRT14,ENROLID AGE DTSTART DOBYR);*got  from , cost ;
%run_dob_pul(mscn14,ccaet141,CCAET14,ENROLID AGE DTSTART DOBYR);*got  from , cost ;
%run_dob_pul(mcd11_15,medicaid_t_2014_v2,MDCDT14,ENROLID /*AGE*/ DTSTART DOBYR);*got  from , cost ;

/* --- 2013-2010 --- */
%run_dob_pul(mscn15,mdcrt132,MDCRT13,ENROLID AGE DTSTART DOBYR);*got  from , cost ;
%run_dob_pul(mscn15,ccaet132,CCAET13,ENROLID AGE DTSTART DOBYR);*got  from , cost ;
%run_dob_pul(mcd11_15,medicaid_t_2013_v4,MDCDT13,ENROLID /*AGE*/ DTSTART DOBYR);*got  from , cost ;

%run_dob_pul(mscn15,mdcrt123,MDCRT12,ENROLID AGE DTSTART DOBYR);*got  from , cost ;
%run_dob_pul(mscn15,ccaet123,CCAET12,ENROLID AGE DTSTART DOBYR);*got  from , cost ;
%run_dob_pul(mcd11_15,medicaid_t_2012_v3,MDCDT12,ENROLID /*AGE*/ DTSTART DOBYR);*got  from , cost ;

%run_dob_pul(mscn15,mdcrt113,MDCRT11,ENROLID AGE DTSTART DOBYR);*got  from , cost ;
%run_dob_pul(mscn15,ccaet113,CCAET11,ENROLID AGE DTSTART DOBYR);*got  from , cost ;
%run_dob_pul(mcd11_15,medicaid_t_2011_v2,MDCDT11,ENROLID /*AGE*/ DTSTART DOBYR);*got  from , cost ;

%run_dob_pul(mscn15,mdcrt103,MDCRT10,ENROLID AGE DTSTART DOBYR);*got  from , cost ;
%run_dob_pul(mscn15,ccaet103,CCAET10,ENROLID AGE DTSTART DOBYR);*got  from , cost ;

/* --- 2009-2006 --- */
%run_dob_pul(mscn0609,mdcrt093,MDCRT09,ENROLID AGE DTSTART DOBYR);*got  from , cost ;
%run_dob_pul(mscn0609,ccaet093,CCAET09,ENROLID AGE DTSTART DOBYR);*got  from , cost ;

%run_dob_pul(mscn0609,mdcrt083,MDCRT08,ENROLID AGE DTSTART DOBYR);*got  from , cost ;
%run_dob_pul(mscn0609,ccaet083,CCAET08,ENROLID AGE DTSTART DOBYR);*got  from , cost ;

%run_dob_pul(mscn0609,mdcrt073,MDCRT07,ENROLID AGE DTSTART DOBYR);*got  from , cost ;
%run_dob_pul(mscn0609,ccaet073,CCAET07,ENROLID AGE DTSTART DOBYR);*got  from , cost ;

%run_dob_pul(mscn0609,mdcrt063,MDCRT06,ENROLID AGE DTSTART DOBYR);*got  from , cost ;
%run_dob_pul(mscn0609,ccaet063,CCAET06,ENROLID AGE DTSTART DOBYR);*got  from , cost ;

proc printto ;run; quit;
%MEND;
%RUN_DOB_PUL;


data &VEW..demog_dob_all_years/view=&VEW..demog_dob_all_years;/* =========== RUN BELOW 'ALL_YEARS' PART AGAIN WHEN NEW DATA COME IN, AFTER CLEANED FROM ABOVE MACRO =========== */
set &WRK..NODUP_DOB_: ;
run;

proc sql;
create table &WRK..demog_unique_dob(compress=binary) as
select distinct patid,
	case when year(max(birth_date_))<dobyr then input("01/01/"||put(dobyr,4.),mmddyy10.)
		 when year(max(birth_date_))>dobyr then input("12/31/"||put(dobyr,4.),mmddyy10.)
		 else birth_date_
		end as BIRTH_DATE length=4 format=mmddyy10. label="Patient Date of Birth",
	count(distinct birth_date_) as N_BIRTH length=3 label="Number of Unique Birth Date"
from &VEW..demog_dob_all_years(rename=(birth_date=birth_date_))
group by patid
having birth_date_=max(birth_date_);
quit;*got 140324963 cost 14:16;

%macro sex_pul(raw,dstin, dstout,kepvars,mSign,fSign);				/* ================ SEX PART ================ */

proc sort data = &raw..&dstin. (keep = &kepVars.
							  where = (strip(&_patid.) not in ('','.') ) ) nodupkey 
		  out = &wrk..pul_sex_&dstout.(compress=binary) ;
by &kepVars. ;
run;

data &wrk..nodup_sex_&dstout. (compress=binary);

	length 	PATID 				$20 
			_SEX				$2 
			SEXUAL_ORIENTATION	$2 
			GENDER_IDENTITY		$2 
			;
	label 	PATID				= "Unique Patient Identification Number"
	      	_SEX				= "Sex Assigned at Birth"
			SEXUAL_ORIENTATION	= "Sexual Orientation"
			GENDER_IDENTITY		= "Current Gender Identity"
			;
set &wrk..pul_sex_&dstout. ;

	by &kepVars. ;

	retain male female ;

	PATID = strip(&_patid.) ;


	if first.enrolid/*PATID*/ then do ;
		male = . ;
		female = . ;
	end;

	if strip(&_sex.) = "&mSign."		then male = 1 ;
	else if strip(&_sex.) = "&fSign."	then female = 1 ;

	if last.enrolid/*PATID*/ then do;
		if 		male = 1 	and female ^= 1		then _sex = 'M' ;
		else if male ^= 1 	and female = 1		then _sex = 'F' ;
		else if male = 1	and female = 1		then _sex = 'A' ;
		else if male ^= 1	and female ^= 1		then _sex = 'NI' ;
		output;
	end;

keep patid _sex sexual_orientation gender_identity ;

run;
%mend;

%MACRO RUN_SEX_PUL;
/*proc printto log="&outpath.\&outfolder.\log_std_SEX_yearly_pul_&verDate..log"  print="&outpath.\&outfolder.\log_std_SEX_yearly_pul_&verDate..lst" new ; run;* direct log to a local file;*/

/* --- 2016 --- */
%sex_pul(m16,mdcra161,MDCRA16,ENROLID SEX,1,2);
%sex_pul(m16,ccaea161,CCAEA16,ENROLID SEX,1,2);
%sex_pul(m16,MEDICAID_a_2016_v1,MDCDA16,ENROLID SEX,1,2);

/* --- 2015 --- */
%sex_pul(MSCN2015,mdcra151,MDCRA15,ENROLID SEX,1,2);
%sex_pul(MSCN2015,ccaea151,CCAEA15,ENROLID SEX,1,2);
%sex_pul(m16,MEDICAID_a_2015_v2,MDCDA15,ENROLID SEX,1,2);

/* --- 2014 --- */
%sex_pul(MSCN14,mdcra141,MDCRA14,ENROLID SEX,1,2);
%sex_pul(MSCN14,ccaea141,CCAEA14,ENROLID SEX,1,2);
%sex_pul(MCD11_15,MEDICAID_a_2014_v2,MDCDA14,ENROLID SEX,1,2);

/* --- 2013-2010 --- */
%sex_pul(MSCN15,mdcra132,MDCRA13,ENROLID SEX,1,2);
%sex_pul(MSCN15,ccaea132,CCAEA13,ENROLID SEX,1,2);
%sex_pul(MCD11_15,MEDICAID_a_2013_v4,MDCDA13,ENROLID SEX,1,2);

%sex_pul(MSCN15,mdcra123,MDCRA12,ENROLID SEX,1,2);
%sex_pul(MSCN15,ccaea123,CCAEA12,ENROLID SEX,1,2);
%sex_pul(MCD11_15,MEDICAID_a_2012_v3,MDCDA12,ENROLID SEX,1,2);

%sex_pul(MSCN15,mdcra113,MDCRA11,ENROLID SEX,1,2);
%sex_pul(MSCN15,ccaea113,CCAEA11,ENROLID SEX,1,2);
%sex_pul(MCD11_15,MEDICAID_a_2011_v2,MDCDA11,ENROLID SEX,1,2);

%sex_pul(MSCN15,mdcra103,MDCRA10,ENROLID SEX,1,2);
%sex_pul(MSCN15,ccaea103,CCAEA10,ENROLID SEX,1,2);

/* --- 2009-2006 --- */
%sex_pul(MSCN0609,mdcra093,MDCRA09,ENROLID SEX,1,2);
%sex_pul(MSCN0609,ccaea093,CCAEA09,ENROLID SEX,1,2);

%sex_pul(MSCN0609,mdcra083,MDCRA08,ENROLID SEX,1,2);
%sex_pul(MSCN0609,ccaea083,CCAEA08,ENROLID SEX,1,2);

%sex_pul(MSCN0609,mdcra073,MDCRA07,ENROLID SEX,1,2);
%sex_pul(MSCN0609,ccaea073,CCAEA07,ENROLID SEX,1,2);

%sex_pul(MSCN0609,mdcra063,MDCRA06,ENROLID SEX,1,2);
%sex_pul(MSCN0609,ccaea063,CCAEA06,ENROLID SEX,1,2);

/*proc printto ; run; quit;*/
%MEND;
%RUN_SEX_PUL;

data &VEW..demog_sex_all_years / view=&VEW..demog_sex_all_years;/* ============== RUN BELOW 'ALL_YEARS' PART AGAIN WHEN NEW DATA COME IN, AFTER CLEANED FROM ABOVE MACRO ============= */

set &WRK..NODUP_sex_: ;

length 	SEX 	$2;
label 	SEX		= "Sex Assigned at Birth";

by patid;

retain Male Female Ambigu;

if first.patid then do;
	male=.;
	female=.;
	ambigu=.;
end;

	 if _sex = "M" then male=1 ;
else if _sex = "F" then female=1 ;
else if _sex = "A" then ambigu=1 ;

if last.patid then do;
		 if ambigu=1 				then SEX='A';
	else if male=1 and female^=1 	then SEX='M';
	else if male^=1 and female=1 	then SEX='F';
	else if male=1 and female=1 	then SEX='A';
	else if male^=1 and female^=1 	then SEX='NI';
	output;
end;

keep patid sex sexual_orientation gender_identity ;

run;

proc sql;
create table &wrk..demog_unique_sex(compress=binary) as
select distinct patid, sex, sexual_orientation, gender_identity
from &VEW..demog_sex_all_years;
quit;


%macro hispa_race_pul(raw,dstin,dstout,kepVars);					/* ================= HISPANIC & RACE PART ================= */
																	/*	IN CCAE/MDCR, BOTH NOT EXIST, CREATE THEM DIRECTLY
																		IN MEDICAID, 1=WHITE, 2=BLACK, 4=HISPANIC, 9=OTHER		*/
proc sort data = &raw..&dstin (keep = &kepVars.
							  where = (strip(&_patid.) not in ('','.') ) ) nodupkey 
		  out = &wrk..pul_hispa_race_&dstout.(compress=binary) ;
by &kepVars. ;
run;

data &wrk..nodup_HISPA_RACE_&dstout.(compress=binary);

	length 	PATID 		$20
			HISPANIC 	$2
			RACE		$2
			;

	label 	PATID		= "Unique Patient Identification Number"
	      	HISPANIC	= "Hispanic Origin, Regardless of Race"
			RACE		= "Patient Race"
			;

set &wrk..pul_HISPA_RACE_&dstout. ;

	by &kepVars. ;

	PATID = strip(put(&_PATID.,20.));

	if substr("&dstout.",1,4) ^= "MDCD" then do;
		RACE = 'NI' ;
		HISPANIC = 'NI' ;
	end;

	else do;
		 if strip(&_race.) = '1' 		then RACE = '05' ; 
	else if strip(&_race.) = '2' 		then RACE = '03' ;
	else if strip(&_race.) in ('4','9') then RACE = 'OT' ;
	else RACE = 'UN' ;

		 if strip(&_race.) = "4" 		then HISPANIC = 'Y';
	else if strip(&_race.) = ""  		then HISPANIC = 'NI';
	else HISPANIC = 'UN' ;

end;

keep patid race hispanic;
run;

%MEND;

%MACRO RUN_HISPA_RACE_PUL;
/*proc printto log="&outpath.\&outfolder.\log_std_HISPA_RACE_yearly_pul_&verDate..log"  print="&outpath.\&outfolder.\log_std_HISPA_RACE_yearly_pul_&verDate..lst" new ; run;* direct log to a local file;*/

/* --- 2016 --- */
%hispa_race_pul(m16,mdcra161,MDCRA16,ENROLID );
%hispa_race_pul(m16,ccaea161,CCAEA16,ENROLID );
%hispa_race_pul(m16,MEDICAID_a_2016_v1,MDCDA16,ENROLID STDRACE);

/* --- 2015 --- */
%hispa_race_pul(MSCN2015,mdcra151,MDCRA15,ENROLID );
%hispa_race_pul(MSCN2015,ccaea151,CCAEA15,ENROLID );
%hispa_race_pul(m16,MEDICAID_a_2015_v2,MDCDA15,ENROLID STDRACE );

/* --- 2014 --- */
%hispa_race_pul(MSCN14,mdcra141,MDCRA14,ENROLID );
%hispa_race_pul(MSCN14,ccaea141,CCAEA14,ENROLID );
%hispa_race_pul(MCD11_15,MEDICAID_a_2014_v2,MDCDA14,ENROLID STDRACE );

/* --- 2013-2010 --- */
%hispa_race_pul(MSCN15,mdcra132,MDCRA13,ENROLID );
%hispa_race_pul(MSCN15,ccaea132,CCAEA13,ENROLID );
%hispa_race_pul(MCD11_15,MEDICAID_a_2013_v4,MDCDA13,ENROLID STDRACE );

%hispa_race_pul(MSCN15,mdcra123,MDCRA12,ENROLID );
%hispa_race_pul(MSCN15,ccaea123,CCAEA12,ENROLID );
%hispa_race_pul(MCD11_15,MEDICAID_a_2012_v3,MDCDA12,ENROLID STDRACE );

%hispa_race_pul(MSCN15,mdcra113,MDCRA11,ENROLID );
%hispa_race_pul(MSCN15,ccaea113,CCAEA11,ENROLID );
%hispa_race_pul(MCD11_15,MEDICAID_a_2011_v2,MDCDA11,ENROLID STDRACE );

%hispa_race_pul(MSCN15,mdcra103,MDCRA10,ENROLID );
%hispa_race_pul(MSCN15,ccaea103,CCAEA10,ENROLID );

/* --- 2009-2006 --- */
%hispa_race_pul(MSCN0609,mdcra093,MDCRA09,ENROLID );
%hispa_race_pul(MSCN0609,ccaea093,CCAEA09,ENROLID );

%hispa_race_pul(MSCN0609,mdcra083,MDCRA08,ENROLID );
%hispa_race_pul(MSCN0609,ccaea083,CCAEA08,ENROLID );

%hispa_race_pul(MSCN0609,mdcra073,MDCRA07,ENROLID );
%hispa_race_pul(MSCN0609,ccaea073,CCAEA07,ENROLID );

%hispa_race_pul(MSCN0609,mdcra063,MDCRA06,ENROLID );
%hispa_race_pul(MSCN0609,ccaea063,CCAEA06,ENROLID );

/*proc printto ; run; quit; */
%MEND;
%RUN_HISPA_RACE_PUL;

data &wrk..demog_unique_race(compress=binary keep=patid race);
set &wrk..nodup_HISPA_RACE_: (drop=hispanic rename=(race=_RACE));

	length 	RACE	$2 ;
	label 	RACE	= "Patient Race" ;

	by patid ;

	retain 	RACE_01	RACE_02	RACE_03	RACE_04	RACE_05	RACE_06	RACE_07	RACE_NI	RACE_UN	RACE_OT	;

	if first.patid then do ;
		RACE_01	= 0 ;
		RACE_02	= 0 ;
		RACE_03	= 0 ;
		RACE_04	= 0 ;
		RACE_05	= 0 ;
		RACE_06	= 0 ;
		RACE_07	= 0 ;
		RACE_NI	= 0 ;
		RACE_UN	= 0 ;
		RACE_OT	= 0 ;
	end;
		 if _race = '01' then race_01 + 1 ;
	else if _race = '02' then race_02 + 1 ;
	else if _race = '03' then race_03 + 1 ;
	else if _race = '04' then race_04 + 1 ;
	else if _race = '05' then race_05 + 1 ;
	else if _race = '06' then race_06 + 1 ;
	else if _race = '07' then race_07 + 1 ;
	else if _race = 'NI' then race_NI + 1 ;
	else if _race = 'UN' then race_UN + 1 ;
	else if _race = 'OT' then race_OT + 1 ;

	if last.patid then do;

		if max(race_01,race_02,race_03,race_04,race_05)>0 then do;
			if race_01>0 and sum(race_02,race_03,race_04,race_05)>0 or
			   race_02>0 and sum(race_01,race_03,race_04,race_05)>0 or
			   race_03>0 and sum(race_01,race_02,race_04,race_05)>0 or
			   race_04>0 and sum(race_01,race_02,race_03,race_05)>0 or
			   race_05>0 and sum(race_01,race_02,race_03,race_04)>0
			   then RACE = '06';
			else if race_01 = max(race_01,race_02,race_03,race_04,race_05)
				then RACE = '01';
			else if race_02 = max(race_01,race_02,race_03,race_04,race_05)
				then RACE = '02';
			else if race_03 = max(race_01,race_02,race_03,race_04,race_05)
				then RACE = '03';
			else if race_04 = max(race_01,race_02,race_03,race_04,race_05)
				then RACE = '04';
			else if race_05 = max(race_01,race_02,race_03,race_04,race_05)
				then RACE = '05';
		end;
		else if race_06>0 then RACE = '06' ;
		else if race_ot>0 then RACE = 'OT' ;
		else if race_07>0 then RACE = '07' ;
		else if race_un>0 then RACE = 'UN' ;
		else if race_ni>0 then RACE = 'NI' ;
		output;
	end;
run; 

data &WRK..DEMOG_UNIQUE_HISPA(compress=binary KEEP=PATID HISPANIC);
set &WRK..nodup_HISPA_RACE_:(drop=RACE rename=(HISPANIC=_HISPANIC));

	length 	HISPANIC	$2 ;
	label 	HISPANIC	= "Hispanic Origin, Regardless of Race" ;

	by PATID;

	retain 	HISP_Y	HISP_N	HISP_R	HISP_NI	HISP_UN	HISP_OT	;

	if first.patid then do ;
		HISP_Y	= 0 ;
		HISP_N	= 0 ;
		HISP_R	= 0 ;
		HISP_NI	= 0 ;
		HISP_UN	= 0 ;
		HISP_OT	= 0 ;
	end;
		 if _HISPANIC = 'Y' 	then HISP_Y + 1 ;
	else if _HISPANIC = 'N' 	then HISP_N + 1 ;
	else if _HISPANIC = 'R' 	then HISP_R + 1 ;
	else if _HISPANIC = 'NI' 	then HISP_NI + 1 ;
	else if _HISPANIC = 'UN' 	then HISP_UN + 1 ;
	else if _HISPANIC = 'OT' 	then HISP_OT + 1 ;

	if last.patid then do;
			 if HISP_Y  > 0 	then HISPANIC = 'Y' ;
		else if HISP_N  > 0 	then HISPANIC = 'N' ;
		else if HISP_OT > 0 	then HISPANIC = 'OT' ;
		else if HISP_R  > 0 	then HISPANIC = 'R' ;
		else if HISP_UN > 0 	then HISPANIC = 'UN' ;
		else if HISP_NI > 0		then HISPANIC = 'NI' ;
		output;
	end;

run;



data &std..DEMOGRAPHIC0616(index=(PATID) alter='#####' compress=binary					/* ================ MERGE ALL CLEANED UNIQUE DEMO INFO TO STANDARDIZATION LIB ================ */
						label="Demographic Info from MKS/Medicaid A and T Files;PW=#####") ;	
merge &wrk..DEMOG_UNIQUE_:(where=(not missing(PATID))) ;
length BIOBANK_FLAG $1 PAT_PREF_LANGUAGE_SPOKEN $3 ;
by PATID;
if sex='' then sex='NI';
if race='' then race='NI';
if hispanic='' then hispanic='NI';
BIOBANK_FLAG	= 'N' ;

run;


proc format;				/* =================== QUICK FACTS =================== */

value $mis_c
	' '		= 'Missing'
	other	= 'NonMiss'
	;

value mis_n
	.		= 'Missing'
	other	= 'NonMiss'
	;
run;

%let factsFolder = MKS STD FACTS ;

%macro mkdir(outpath,outfolder);
	* CREATE WORK DIRECTORY FOR OUTPUT IF IT DOES NOT EXIST;
	%if %sysfunc(fileexist(&outpath.\&factsFolder.)) ^= 1 %then %do;
		options dlcreatedir;
		libname output "&outpath.\&factsFolder.";
	%end;
	%else %put &outpath.\&factsFolder. already exists ;
%mend mkdir;
%mkdir(&outpath.,&factsFolder.);

ods html body="STD_Facts_MKS_Demog0616_&verDate..html" path="&outpath.\&factsFolder.\" (url=none);

proc contents data=&std..demographic0616;run;

proc freq data=&std..demographic0616;
table sex gender_identity sexual_orientation 
	  race hispanic 
	  pat_pref_language_spoken
	  birth_date n_birth /missing;
format birth_date mis_n. ;
run;

ods html close;
