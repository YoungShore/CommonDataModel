/*STD_Death_&_Cause_MKS16_180108 */

/* ================================================================ */
/*						Define SAS Libraries						*/

%inc "M:\studies\MarketScan1\formats\libname.txt";
%inc "M:\studies\MarketScan1\pgms\Shuo\libname_sy.txt";

%let raw = ;
%let vew = dt64 ;
%let wrk = ysms2 ;
%let std = s_mks;

%let outpath = M:\studies\MarketScan1\pgms\Shuo\results ;
%let verDate = %sysfunc(today(),yymmdd6.) ;
%let outfolder = &verDate.-MKS STD DEMO ;


%macro mkdir(outpath,outfolder);
	* CREATE WORK DIRECTORY FOR OUTPUT IF IT DOES NOT EXIST;
	%if %sysfunc(fileexist(&outpath.\&outfolder.)) ^= 1 %then %do;
		options dlcreatedir;
		libname output "&outpath.\&outfolder.";
	%end;
	%else %put &outpath.\&outfolder. already exists ;
%mend mkdir;
%mkdir(&outpath.,&outfolder.);

/* ==================================================================================== */
/*						Define PCORNET Variables & Necessary Others						*/

%let _patID					= PUT(ENROLID,20.) ;
%let _deathStatus			= COALESCEC(DSTATUS,put(DRG,3.)) ;
%let _deathDate				= COALESCE(DISDATE,TSVCDAT) ;			*<-- diff source named differently, so defined it at macro step ;
%let _deathDateImpute		= "N" ;
%let _deathSource			= "L" ;
%let _deathMatchConfidence	= "NI" ;

* ---- death cause data ---- ;

%let _deathCause			= PDX ;
%let _deathCauseCode		= DXVER ;
%let _deathCauseType		= "UN" ;
%let _deathCauseSource		= "L" ;
%let _deathCauseConfidence	= "NI" ;


%macro DOD_pul(raw,dstin,dstout,_deathDate,kepVars);					/* ===================== DOD PULL =================== */
proc sort data = &raw..&dstin. (keep = &kepVars.
								where=( compress(&_patid.,'. ') not in ('') 
									and &_deathDate. ^=.  
									and strip(&_deathStatus.) in ('20','40','41','42','283','284','285')
									   ) 
								) nodupkey 
		  out = &wrk..pul_dod_&dstout. (compress=binary) ;
by &kepVars. ;
run;

data &VEW..nodup_dod_&dstout. / view=&VEW..nodup_DOD_&dstout. ;

	length 	PATID 					$20
			DEATH_DATE 				4
			DEATH_DATE_IMPUTE		$2
			DEATH_SOURCE			$2
			DEATH_MATCH_CONFIDENCE	$2

			DEATH_CAUSE				$8
			DEATH_CAUSE_CODE		$2
			DEATH_CAUSE_TYPE		$2
			DEATH_CAUSE_SOURCE		$2
			DEATH_CAUSE_CONFIDENCE	$2
			;
	label 	PATID					= "Unique Patient Identification Number"
	      	DEATH_DATE				= "Date of Death"
			DEATH_DATE_IMPUTE		= "Which Part of DEATH_DATE is Imputed"
			DEATH_SOURCE			= "Death Source"
			DEATH_MATCH_CONFIDENCE	= "Confidence of Probabilistic Matching Strategy if Applied"

			DEATH_CAUSE				= "Cause of Death"
			DEATH_CAUSE_CODE		= "Cause of Death Code Type (DRG for MKS)"
			DEATH_CAUSE_TYPE		= "Cause of Death Type"
			DEATH_CAUSE_SOURCE		= "Source of Cause of Death Info"
			DEATH_CAUSE_CONFIDENCE	= "Confidence of Accurary of the Cause of Death"
			;
set &wrk..pul_dod_&dstout. ;

	by &kepvars. ;

	PATID 					= compress(&_PATID.,'. ') ;
	DEATH_DATE 				= &_deathDate. ;
	DEATH_DATE_IMPUTE 		= strip(&_deathDateImpute.)  ;
	DEATH_SOURCE			= strip(&_deathSource.) ;
	DEATH_MATCH_CONFIDENCE	= strip(&_deathMatchConfidence.) ;

	DEATH_CAUSE				= compress(&_deathCause.,' ') ;

		 if	strip(&_deathCauseCode.)='0'	then DEATH_CAUSE_CODE = '10' ;
	else if strip(&_deathCauseCode.)='9'	then DEATH_CAUSE_CODE = '09' ;
	else if 0<input(substr("&dstout.",6,2),best4.) < 15 	then DEATH_CAUSE_CODE = '09' ;
	else DEATH_CAUSE_CODE = 'UN' ;

	DEATH_CAUSE_TYPE 		= strip(&_deathCauseType.) ;

	DEATH_CAUSE_SOURCE		= strip(&_deathCauseSource.) ;
	DEATH_CAUSE_CONFIDENCE	= strip(&_deathCauseConfidence.) ;


	format DEATH_DATE mmddyy10.;

	keep patid death_: ;

run;

%mend;

proc printto log="&outpath.\&outfolder.\log_STD_DEATH_yearly_pul_&verDate..log"  print="&outpath.\&outfolder.\log_STD_DEATH_yearly_pul_&verDate..lst" new ; run;* direct log to a local file;

			/* ------ 2016 ------ */
%dod_pul(m16,mdcri161,MDCRI16,DISDATE,ENROLID DSTATUS DRG DISDATE  PDX DXVER);
%dod_pul(m16,mdcrs161,MDCRS16,DISDATE,ENROLID DSTATUS DRG DISDATE TSVCDAT PDX DXVER);

%dod_pul(m16,ccaei161,CCAEI16,DISDATE,ENROLID DSTATUS DRG DISDATE  PDX DXVER);
%dod_pul(m16,ccaes161,CCAES16,DISDATE,ENROLID DSTATUS DRG DISDATE TSVCDAT PDX DXVER);

%dod_pul(m16,medicaid_i_2016_v1,MDCDI16,DISDATE,ENROLID DSTATUS DRG DISDATE  PDX DXVER);
%dod_pul(m16,medicaid_s_2016_v1,MDCDS16,DISDATE,ENROLID DSTATUS DRG DISDATE TSVCDAT PDX DXVER);

			/* ------ 2015 ------ */
%dod_pul(MSCN2015,mdcri151,MDCRI15,DISDATE,ENROLID DSTATUS DRG DISDATE  PDX DXVER);
%dod_pul(MSCN2015,mdcrs151,MDCRS15,DISDATE,ENROLID DSTATUS DRG DISDATE TSVCDAT PDX DXVER);

%dod_pul(MSCN2015,ccaei151,CCAEI15,DISDATE,ENROLID DSTATUS DRG DISDATE  PDX DXVER);
%dod_pul(MSCN2015,ccaes151,CCAES15,DISDATE,ENROLID DSTATUS DRG DISDATE TSVCDAT PDX DXVER);

%dod_pul(m16,medicaid_i_2015_v2,MDCDI15,DISDATE,ENROLID DSTATUS DRG DISDATE  PDX DXVER);
%dod_pul(m16,medicaid_s_2015_v2,MDCDS15,DISDATE,ENROLID DSTATUS DRG DISDATE TSVCDAT PDX DXVER);

			/* ------ 2014 ------ */
%dod_pul(MSCN14,mdcri141,MDCRI14,DISDATE,ENROLID DSTATUS DRG DISDATE  PDX);
%dod_pul(MSCN14,mdcrs141,MDCRS14,DISDATE,ENROLID DSTATUS DRG DISDATE TSVCDAT PDX);

%dod_pul(MSCN14,ccaei141,CCAEI14,DISDATE,ENROLID DSTATUS DRG DISDATE  PDX);
%dod_pul(MSCN14,ccaes141,CCAES14,DISDATE,ENROLID DSTATUS DRG DISDATE TSVCDAT PDX);

/* --- 2013-2010 --- */
%dod_pul(MSCN15,mdcri132,MDCRI13,DISDATE,ENROLID DSTATUS DRG DISDATE  PDX);
%dod_pul(MSCN15,mdcrs132,MDCRS13,DISDATE,ENROLID DSTATUS DRG DISDATE TSVCDAT PDX);

%dod_pul(MSCN15,ccaei132,CCAEI13,DISDATE,ENROLID DSTATUS DRG DISDATE  PDX);
%dod_pul(MSCN15,ccaes132,CCAES13,DISDATE,ENROLID DSTATUS DRG DISDATE TSVCDAT PDX);


%dod_pul(MSCN15,mdcri113,MDCRI11,DISDATE,ENROLID DSTATUS DRG DISDATE  PDX);
%dod_pul(MSCN15,mdcrs113,MDCRS11,DISDATE,ENROLID DSTATUS DRG DISDATE TSVCDAT PDX);

%dod_pul(MSCN15,ccaei113,CCAEI11,DISDATE,ENROLID DSTATUS DRG DISDATE  PDX);
%dod_pul(MSCN15,ccaes113,CCAES11,DISDATE,ENROLID DSTATUS DRG DISDATE TSVCDAT PDX);


%dod_pul(MSCN15,mdcri113,MDCRI11,DISDATE,ENROLID DSTATUS DRG DISDATE  PDX);
%dod_pul(MSCN15,mdcrs113,MDCRS11,DISDATE,ENROLID DSTATUS DRG DISDATE TSVCDAT PDX);

%dod_pul(MSCN15,ccaei113,CCAEI11,DISDATE,ENROLID DSTATUS DRG DISDATE  PDX);
%dod_pul(MSCN15,ccaes113,CCAES11,DISDATE,ENROLID DSTATUS DRG DISDATE TSVCDAT PDX);


%dod_pul(MSCN15,mdcri103,MDCRI10,DISDATE,ENROLID DSTATUS DRG DISDATE  PDX);
%dod_pul(MSCN15,mdcrs103,MDCRS10,DISDATE,ENROLID DSTATUS DRG DISDATE TSVCDAT PDX);

%dod_pul(MSCN15,ccaei103,CCAEI10,DISDATE,ENROLID DSTATUS DRG DISDATE  PDX);
%dod_pul(MSCN15,ccaes103,CCAES10,DISDATE,ENROLID DSTATUS DRG DISDATE TSVCDAT PDX);

proc printto ; run; quit;

data &vew..DOD_all_years/view=&vew..dod_all_years ;
set &vew..nodup_dod_: ;
run;

proc sql;														/* ================ GET CLEANED UNIQUE DEATH INFO TO STANDARDIZATION LIBRARY ================ */
create table &std..death(compress=binary index=(PATID) alter='aDmSY18' 
						 label="Death Info from MarketScan/Medicaid I,S Files;PW=_AD_MSY18" ) as
select distinct PATID,
				max(DEATH_DATE) as DEATH_DATE length=4 format=mmddyy10. label="Date of Death",
				DEATH_DATE_IMPUTE, DEATH_SOURCE, DEATH_MATCH_CONFIDENCE,
				count(distinct death_date) as N_DEATH length=3 label="Number of Unique Death Date"
from &VEW..DOD_all_years
group by patid ;

create table &std..death_cause(compress=binary index=(PATID) alter='aDmSY18'
						 label="Death Cause Info from MarketScan/Medicaid I,S Files;PW=_AD_MSY18" ) as
select distinct PATID, DEATH_CAUSE, DEATH_CAUSE_CODE, DEATH_CAUSE_TYPE, DEATH_CAUSE_SOURCE, DEATH_CAUSE_CONFIDENCE
from &vew..dod_all_years;
quit;
